{
    Name = "KisMAC";
    AppleEventCode = "BIKM";
    
    Classes = {
        NSApplication = {
            Superclass = "NSCoreSuite.NSApplication";
            AppleEventCode = "capp";
            SupportedCommands = {
                "KisMAC.showNetworks"           = "showNetworks:"; 
                "KisMAC.showTraffic"            = "showTraffic:"; 
                "KisMAC.showMap"                = "showMap:";
                "KisMAC.showDetails"            = "showDetails:";
                "KisMAC.startScan"              = "startScan:";
                "KisMAC.stopScan"               = "stopScan:";
                "KisMAC.New"                    = "new:";
                "KisMAC.ImportKisMAC"           = "importKisMAC:";
                "KisMAC.ImportImageForMap"      = "importImageForMap:";
                "KisMAC.ImportPCAP"             = "importPCAP:";
                "NSCoreSuite.Save"              = "save:";
                "KisMAC.saveAs"                 = "saveAs:";
                "KisMAC.SelectNetworkAtIndex"   = "selectNetworkAtIndex:";
                "KisMAC.SelectNetworkWithBSSID" = "selectNetworkWithBSSID:";
                "KisMAC.NetworkCount"           = "networkCount:";
                "KisMAC.BruteforceNewsham"      = "bruteforceNewsham:";
                "KisMAC.Bruteforce40bitLow"     = "bruteforce40bitLow:";
                "KisMAC.Bruteforce40bitAlpha"   = "bruteforce40bitAlpha:";
                "KisMAC.Bruteforce40bitAll"     = "bruteforce40bitAll:";
                "KisMAC.Wordlist40bitApple"     = "wordlist40bitApple:";
                "KisMAC.Wordlist104bitApple"    = "wordlist104bitApple:";
                "KisMAC.Wordlist104bitMD5"      = "wordlist104bitMD5:";
                "KisMAC.WordlistWPA"			= "wordlistWPA:";
				"KisMAC.WordlistLEAP"			= "wordlistLEAP:";
                "KisMAC.WeakSchedulingAttack"   = "weakSchedulingAttack:";
                "KisMAC.Busy"                   = "busy:";
                "KisMAC.ShowNetworksInMap"      = "showNetworksInMap:";
                "KisMAC.ShowTraceInMap"         = "showTraceInMap:";
                "KisMAC.SetCurrentPosition"     = "setCurrentPosition:";
                "KisMAC.SetWaypoint"            = "setWaypoint:";
                "KisMAC.DownloadMap"            = "downloadMap:";
            }; 
        };
    };
    Commands = {
        saveAs = {
            AppleEventCode = KsaA;
            CommandClass = NSScriptCommand; 
            UnnamedArgument = { Optional = NO; Type = "NSString<FilePath>"; };
        }; 
        showNetworks = {
            AppleEventCode = KshN;
            CommandClass = NSScriptCommand; 
        }; 
        showTraffic = {
            AppleEventCode = KshT; 
            CommandClass = NSScriptCommand; 
        }; 
        showMap = {
            AppleEventCode = KshM; 
            CommandClass = NSScriptCommand; 
        }; 
        showDetails = {
            AppleEventCode = KshD; 
            CommandClass = NSScriptCommand; 
        }; 
        startScan = {
            AppleEventCode = KsaS; 
            CommandClass = NSScriptCommand; 
        }; 
        stopScan = {
            AppleEventCode = KsoS; 
            CommandClass = NSScriptCommand; 
        }; 
        New = {
            AppleEventCode = KNew; 
            CommandClass = NSScriptCommand; 
        }; 
        ImportKisMAC = {
            AppleEventCode = KImK; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString<FilePath>"; };
        }; 
        ImportImageForMap = {
            AppleEventCode = KImI; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString<FilePath>"; };
        }; 
		ImportPCAP = {
            AppleEventCode = KImP; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString<FilePath>"; };
        }; 
        DownloadMap = {
            AppleEventCode = KDMp;
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString"; };
            Arguments = {
                Latitude = { AppleEventCode = KMLa; Optional = NO; Type = "NSNumber<Double>"; }; 
                Longitude = { AppleEventCode = KMLo; Optional = NO; Type = "NSNumber<Double>"; }; 
                Width = { AppleEventCode = KWid; Optional = YES; Type = "NSNumber<Double>"; }; 
                Height = { AppleEventCode = KHig; Optional = YES; Type = "NSNumber<Double>"; }; 
                Zoom = { AppleEventCode = KScl; Optional = YES; Type = "NSNumber<Int>"; };
            };
        };
        SelectNetworkAtIndex = {
            AppleEventCode = KSNI; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSNumber"; };
        }; 
        SelectNetworkWithBSSID = {
            AppleEventCode = KSNB; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString"; };
        };
        NetworkCount = {
            AppleEventCode = KNCn; 
            CommandClass = NSScriptCommand; 
        };
        BruteforceNewsham = {
            AppleEventCode = KCBN; 
            CommandClass = NSScriptCommand;
        };
        Bruteforce40bitLow = {
            AppleEventCode = KCBL; 
            CommandClass = NSScriptCommand;
        };
        Bruteforce40bitAlpha = {
            AppleEventCode = KCBa; 
            CommandClass = NSScriptCommand;
        };
        Bruteforce40bitAll = {
            AppleEventCode = KCBA; 
            CommandClass = NSScriptCommand;
        };
        Wordlist40bitApple = {
            AppleEventCode = KCWa; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString<FilePath>"; };
        };
        Wordlist104bitApple = {
            AppleEventCode = KCWA; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString<FilePath>"; };
        };
        Wordlist104bitMD5 = {
            AppleEventCode = KCWM; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString<FilePath>"; };
        };
        WordlistWPA = {
            AppleEventCode = KCWW; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString<FilePath>"; };
        };
        WordlistLEAP = {
            AppleEventCode = KCWL; 
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSString<FilePath>"; };
        };
        WeakSchedulingAttack = {
            AppleEventCode = KCSc; 
            CommandClass = NSScriptCommand;
            Arguments = {
                KeyID = { AppleEventCode = KCKi; Optional = YES; Type = "NSNumber<Int>"; }; 
                KeyLen = { AppleEventCode = KCKl; Optional = YES; Type = "NSNumber<Int>"; }; 
            };
        };
        Busy = {
            AppleEventCode = KBus; 
            CommandClass = NSScriptCommand;
        };
        ShowNetworksInMap = {
            AppleEventCode = KMSN;
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSNumber<Bool>"; };
        };
        ShowTraceInMap = {
            AppleEventCode = KMST;
            CommandClass = NSScriptCommand;
            UnnamedArgument = { Optional = NO; Type = "NSNumber<Bool>"; };
        };
        SetCurrentPosition = {
            AppleEventCode = KMSP;
            CommandClass = NSScriptCommand;
            Arguments = {
                Latitude = { AppleEventCode = KMLa; Optional = NO; Type = "NSNumber<Double>"; }; 
                Longitude = { AppleEventCode = KMLo; Optional = NO; Type = "NSNumber<Double>"; }; 
            };
        };
        SetWaypoint = {
            AppleEventCode = KMSW;
            CommandClass = NSScriptCommand;
            Arguments = {
                Latitude = { AppleEventCode = KMLa; Optional = NO; Type = "NSNumber<Double>"; }; 
                Longitude = { AppleEventCode = KMLo; Optional = NO; Type = "NSNumber<Double>"; }; 
                X = { AppleEventCode = KM_x; Optional = NO; Type = "NSNumber<Double>"; }; 
                Y = { AppleEventCode = KM_y; Optional = NO; Type = "NSNumber<Double>"; }; 
            };
            UnnamedArgument = { Optional = NO; Type = "NSNumber<Int>"; };
        };
    };
    UsedFeatures = (UnnamedArguments);
}